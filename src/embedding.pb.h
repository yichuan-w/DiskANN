// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: embedding.proto
// Protobuf C++ Version: 5.29.3

#ifndef embedding_2eproto_2epb_2eh
#define embedding_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_embedding_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_embedding_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_embedding_2eproto;
namespace protoembedding {
class NodeEmbeddingRequest;
struct NodeEmbeddingRequestDefaultTypeInternal;
extern NodeEmbeddingRequestDefaultTypeInternal _NodeEmbeddingRequest_default_instance_;
class NodeEmbeddingResponse;
struct NodeEmbeddingResponseDefaultTypeInternal;
extern NodeEmbeddingResponseDefaultTypeInternal _NodeEmbeddingResponse_default_instance_;
}  // namespace protoembedding
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protoembedding {

// ===================================================================


// -------------------------------------------------------------------

class NodeEmbeddingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protoembedding.NodeEmbeddingResponse) */ {
 public:
  inline NodeEmbeddingResponse() : NodeEmbeddingResponse(nullptr) {}
  ~NodeEmbeddingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NodeEmbeddingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NodeEmbeddingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeEmbeddingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeEmbeddingResponse(const NodeEmbeddingResponse& from) : NodeEmbeddingResponse(nullptr, from) {}
  inline NodeEmbeddingResponse(NodeEmbeddingResponse&& from) noexcept
      : NodeEmbeddingResponse(nullptr, std::move(from)) {}
  inline NodeEmbeddingResponse& operator=(const NodeEmbeddingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeEmbeddingResponse& operator=(NodeEmbeddingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeEmbeddingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeEmbeddingResponse* internal_default_instance() {
    return reinterpret_cast<const NodeEmbeddingResponse*>(
        &_NodeEmbeddingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NodeEmbeddingResponse& a, NodeEmbeddingResponse& b) { a.Swap(&b); }
  inline void Swap(NodeEmbeddingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeEmbeddingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeEmbeddingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NodeEmbeddingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeEmbeddingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeEmbeddingResponse& from) { NodeEmbeddingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NodeEmbeddingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protoembedding.NodeEmbeddingResponse"; }

 protected:
  explicit NodeEmbeddingResponse(::google::protobuf::Arena* arena);
  NodeEmbeddingResponse(::google::protobuf::Arena* arena, const NodeEmbeddingResponse& from);
  NodeEmbeddingResponse(::google::protobuf::Arena* arena, NodeEmbeddingResponse&& from) noexcept
      : NodeEmbeddingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDimensionsFieldNumber = 2,
    kMissingIdsFieldNumber = 3,
    kEmbeddingsDataFieldNumber = 1,
  };
  // repeated int32 dimensions = 2;
  int dimensions_size() const;
  private:
  int _internal_dimensions_size() const;

  public:
  void clear_dimensions() ;
  ::int32_t dimensions(int index) const;
  void set_dimensions(int index, ::int32_t value);
  void add_dimensions(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& dimensions() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_dimensions();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_dimensions() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_dimensions();

  public:
  // repeated uint32 missing_ids = 3;
  int missing_ids_size() const;
  private:
  int _internal_missing_ids_size() const;

  public:
  void clear_missing_ids() ;
  ::uint32_t missing_ids(int index) const;
  void set_missing_ids(int index, ::uint32_t value);
  void add_missing_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& missing_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_missing_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_missing_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_missing_ids();

  public:
  // bytes embeddings_data = 1;
  void clear_embeddings_data() ;
  const std::string& embeddings_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_embeddings_data(Arg_&& arg, Args_... args);
  std::string* mutable_embeddings_data();
  PROTOBUF_NODISCARD std::string* release_embeddings_data();
  void set_allocated_embeddings_data(std::string* value);

  private:
  const std::string& _internal_embeddings_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_embeddings_data(
      const std::string& value);
  std::string* _internal_mutable_embeddings_data();

  public:
  // @@protoc_insertion_point(class_scope:protoembedding.NodeEmbeddingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeEmbeddingResponse& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> dimensions_;
    ::google::protobuf::internal::CachedSize _dimensions_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> missing_ids_;
    ::google::protobuf::internal::CachedSize _missing_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr embeddings_data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_embedding_2eproto;
};
// -------------------------------------------------------------------

class NodeEmbeddingRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protoembedding.NodeEmbeddingRequest) */ {
 public:
  inline NodeEmbeddingRequest() : NodeEmbeddingRequest(nullptr) {}
  ~NodeEmbeddingRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NodeEmbeddingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NodeEmbeddingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeEmbeddingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeEmbeddingRequest(const NodeEmbeddingRequest& from) : NodeEmbeddingRequest(nullptr, from) {}
  inline NodeEmbeddingRequest(NodeEmbeddingRequest&& from) noexcept
      : NodeEmbeddingRequest(nullptr, std::move(from)) {}
  inline NodeEmbeddingRequest& operator=(const NodeEmbeddingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeEmbeddingRequest& operator=(NodeEmbeddingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeEmbeddingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeEmbeddingRequest* internal_default_instance() {
    return reinterpret_cast<const NodeEmbeddingRequest*>(
        &_NodeEmbeddingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NodeEmbeddingRequest& a, NodeEmbeddingRequest& b) { a.Swap(&b); }
  inline void Swap(NodeEmbeddingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeEmbeddingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeEmbeddingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NodeEmbeddingRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeEmbeddingRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeEmbeddingRequest& from) { NodeEmbeddingRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NodeEmbeddingRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protoembedding.NodeEmbeddingRequest"; }

 protected:
  explicit NodeEmbeddingRequest(::google::protobuf::Arena* arena);
  NodeEmbeddingRequest(::google::protobuf::Arena* arena, const NodeEmbeddingRequest& from);
  NodeEmbeddingRequest(::google::protobuf::Arena* arena, NodeEmbeddingRequest&& from) noexcept
      : NodeEmbeddingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdsFieldNumber = 1,
  };
  // repeated uint32 node_ids = 1;
  int node_ids_size() const;
  private:
  int _internal_node_ids_size() const;

  public:
  void clear_node_ids() ;
  ::uint32_t node_ids(int index) const;
  void set_node_ids(int index, ::uint32_t value);
  void add_node_ids(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& node_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_node_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_node_ids() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_node_ids();

  public:
  // @@protoc_insertion_point(class_scope:protoembedding.NodeEmbeddingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeEmbeddingRequest& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> node_ids_;
    ::google::protobuf::internal::CachedSize _node_ids_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_embedding_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NodeEmbeddingRequest

// repeated uint32 node_ids = 1;
inline int NodeEmbeddingRequest::_internal_node_ids_size() const {
  return _internal_node_ids().size();
}
inline int NodeEmbeddingRequest::node_ids_size() const {
  return _internal_node_ids_size();
}
inline void NodeEmbeddingRequest::clear_node_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_ids_.Clear();
}
inline ::uint32_t NodeEmbeddingRequest::node_ids(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingRequest.node_ids)
  return _internal_node_ids().Get(index);
}
inline void NodeEmbeddingRequest::set_node_ids(int index, ::uint32_t value) {
  _internal_mutable_node_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingRequest.node_ids)
}
inline void NodeEmbeddingRequest::add_node_ids(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_node_ids()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingRequest.node_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingRequest::node_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingRequest.node_ids)
  return _internal_node_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingRequest::mutable_node_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingRequest.node_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
NodeEmbeddingRequest::_internal_node_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingRequest::_internal_mutable_node_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_ids_;
}

// -------------------------------------------------------------------

// NodeEmbeddingResponse

// bytes embeddings_data = 1;
inline void NodeEmbeddingResponse::clear_embeddings_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddings_data_.ClearToEmpty();
}
inline const std::string& NodeEmbeddingResponse::embeddings_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingResponse.embeddings_data)
  return _internal_embeddings_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeEmbeddingResponse::set_embeddings_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddings_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingResponse.embeddings_data)
}
inline std::string* NodeEmbeddingResponse::mutable_embeddings_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_embeddings_data();
  // @@protoc_insertion_point(field_mutable:protoembedding.NodeEmbeddingResponse.embeddings_data)
  return _s;
}
inline const std::string& NodeEmbeddingResponse::_internal_embeddings_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.embeddings_data_.Get();
}
inline void NodeEmbeddingResponse::_internal_set_embeddings_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddings_data_.Set(value, GetArena());
}
inline std::string* NodeEmbeddingResponse::_internal_mutable_embeddings_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.embeddings_data_.Mutable( GetArena());
}
inline std::string* NodeEmbeddingResponse::release_embeddings_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protoembedding.NodeEmbeddingResponse.embeddings_data)
  return _impl_.embeddings_data_.Release();
}
inline void NodeEmbeddingResponse::set_allocated_embeddings_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.embeddings_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.embeddings_data_.IsDefault()) {
    _impl_.embeddings_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protoembedding.NodeEmbeddingResponse.embeddings_data)
}

// repeated int32 dimensions = 2;
inline int NodeEmbeddingResponse::_internal_dimensions_size() const {
  return _internal_dimensions().size();
}
inline int NodeEmbeddingResponse::dimensions_size() const {
  return _internal_dimensions_size();
}
inline void NodeEmbeddingResponse::clear_dimensions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dimensions_.Clear();
}
inline ::int32_t NodeEmbeddingResponse::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingResponse.dimensions)
  return _internal_dimensions().Get(index);
}
inline void NodeEmbeddingResponse::set_dimensions(int index, ::int32_t value) {
  _internal_mutable_dimensions()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingResponse.dimensions)
}
inline void NodeEmbeddingResponse::add_dimensions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dimensions()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingResponse.dimensions)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& NodeEmbeddingResponse::dimensions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingResponse.dimensions)
  return _internal_dimensions();
}
inline ::google::protobuf::RepeatedField<::int32_t>* NodeEmbeddingResponse::mutable_dimensions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingResponse.dimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dimensions();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
NodeEmbeddingResponse::_internal_dimensions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dimensions_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* NodeEmbeddingResponse::_internal_mutable_dimensions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dimensions_;
}

// repeated uint32 missing_ids = 3;
inline int NodeEmbeddingResponse::_internal_missing_ids_size() const {
  return _internal_missing_ids().size();
}
inline int NodeEmbeddingResponse::missing_ids_size() const {
  return _internal_missing_ids_size();
}
inline void NodeEmbeddingResponse::clear_missing_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.missing_ids_.Clear();
}
inline ::uint32_t NodeEmbeddingResponse::missing_ids(int index) const {
  // @@protoc_insertion_point(field_get:protoembedding.NodeEmbeddingResponse.missing_ids)
  return _internal_missing_ids().Get(index);
}
inline void NodeEmbeddingResponse::set_missing_ids(int index, ::uint32_t value) {
  _internal_mutable_missing_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:protoembedding.NodeEmbeddingResponse.missing_ids)
}
inline void NodeEmbeddingResponse::add_missing_ids(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_missing_ids()->Add(value);
  // @@protoc_insertion_point(field_add:protoembedding.NodeEmbeddingResponse.missing_ids)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& NodeEmbeddingResponse::missing_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protoembedding.NodeEmbeddingResponse.missing_ids)
  return _internal_missing_ids();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingResponse::mutable_missing_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protoembedding.NodeEmbeddingResponse.missing_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_missing_ids();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
NodeEmbeddingResponse::_internal_missing_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.missing_ids_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* NodeEmbeddingResponse::_internal_mutable_missing_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.missing_ids_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protoembedding


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // embedding_2eproto_2epb_2eh
