// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: embedding.proto
// Protobuf C++ Version: 5.29.3

#include "embedding.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protoembedding {

inline constexpr NodeEmbeddingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dimensions_{},
        _dimensions_cached_byte_size_{0},
        missing_ids_{},
        _missing_ids_cached_byte_size_{0},
        embeddings_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeEmbeddingResponse::NodeEmbeddingResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeEmbeddingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeEmbeddingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeEmbeddingResponseDefaultTypeInternal() {}
  union {
    NodeEmbeddingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeEmbeddingResponseDefaultTypeInternal _NodeEmbeddingResponse_default_instance_;

inline constexpr NodeEmbeddingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_ids_{},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeEmbeddingRequest::NodeEmbeddingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeEmbeddingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeEmbeddingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeEmbeddingRequestDefaultTypeInternal() {}
  union {
    NodeEmbeddingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeEmbeddingRequestDefaultTypeInternal _NodeEmbeddingRequest_default_instance_;
}  // namespace protoembedding
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_embedding_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_embedding_2eproto = nullptr;
const ::uint32_t
    TableStruct_embedding_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingRequest, _impl_.node_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _impl_.embeddings_data_),
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _impl_.dimensions_),
        PROTOBUF_FIELD_OFFSET(::protoembedding::NodeEmbeddingResponse, _impl_.missing_ids_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protoembedding::NodeEmbeddingRequest)},
        {9, -1, -1, sizeof(::protoembedding::NodeEmbeddingResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protoembedding::_NodeEmbeddingRequest_default_instance_._instance,
    &::protoembedding::_NodeEmbeddingResponse_default_instance_._instance,
};
const char descriptor_table_protodef_embedding_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017embedding.proto\022\016protoembedding\"(\n\024Nod"
    "eEmbeddingRequest\022\020\n\010node_ids\030\001 \003(\r\"Y\n\025N"
    "odeEmbeddingResponse\022\027\n\017embeddings_data\030"
    "\001 \001(\014\022\022\n\ndimensions\030\002 \003(\005\022\023\n\013missing_ids"
    "\030\003 \003(\rb\006proto3"
};
static ::absl::once_flag descriptor_table_embedding_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_embedding_2eproto = {
    false,
    false,
    174,
    descriptor_table_protodef_embedding_2eproto,
    "embedding.proto",
    &descriptor_table_embedding_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_embedding_2eproto::offsets,
    file_level_enum_descriptors_embedding_2eproto,
    file_level_service_descriptors_embedding_2eproto,
};
namespace protoembedding {
// ===================================================================

class NodeEmbeddingRequest::_Internal {
 public:
};

NodeEmbeddingRequest::NodeEmbeddingRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protoembedding.NodeEmbeddingRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protoembedding::NodeEmbeddingRequest& from_msg)
      : node_ids_{visibility, arena, from.node_ids_},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

NodeEmbeddingRequest::NodeEmbeddingRequest(
    ::google::protobuf::Arena* arena,
    const NodeEmbeddingRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeEmbeddingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:protoembedding.NodeEmbeddingRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_ids_{visibility, arena},
        _node_ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void NodeEmbeddingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeEmbeddingRequest::~NodeEmbeddingRequest() {
  // @@protoc_insertion_point(destructor:protoembedding.NodeEmbeddingRequest)
  SharedDtor(*this);
}
inline void NodeEmbeddingRequest::SharedDtor(MessageLite& self) {
  NodeEmbeddingRequest& this_ = static_cast<NodeEmbeddingRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NodeEmbeddingRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeEmbeddingRequest(arena);
}
constexpr auto NodeEmbeddingRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_.node_ids_) +
          decltype(NodeEmbeddingRequest::_impl_.node_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NodeEmbeddingRequest), alignof(NodeEmbeddingRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeEmbeddingRequest::PlacementNew_,
                                 sizeof(NodeEmbeddingRequest),
                                 alignof(NodeEmbeddingRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeEmbeddingRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeEmbeddingRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeEmbeddingRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeEmbeddingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeEmbeddingRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeEmbeddingRequest>(), &NodeEmbeddingRequest::ByteSizeLong,
            &NodeEmbeddingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_._cached_size_),
        false,
    },
    &NodeEmbeddingRequest::kDescriptorMethods,
    &descriptor_table_embedding_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeEmbeddingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NodeEmbeddingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protoembedding::NodeEmbeddingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 node_ids = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_.node_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 node_ids = 1;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingRequest, _impl_.node_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NodeEmbeddingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:protoembedding.NodeEmbeddingRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeEmbeddingRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeEmbeddingRequest& this_ = static_cast<const NodeEmbeddingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeEmbeddingRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeEmbeddingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protoembedding.NodeEmbeddingRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated uint32 node_ids = 1;
          {
            int byte_size = this_._impl_._node_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  1, this_._internal_node_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protoembedding.NodeEmbeddingRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeEmbeddingRequest::ByteSizeLong(const MessageLite& base) {
          const NodeEmbeddingRequest& this_ = static_cast<const NodeEmbeddingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeEmbeddingRequest::ByteSizeLong() const {
          const NodeEmbeddingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protoembedding.NodeEmbeddingRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 node_ids = 1;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_node_ids(), 1,
                      this_._impl_._node_ids_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeEmbeddingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeEmbeddingRequest*>(&to_msg);
  auto& from = static_cast<const NodeEmbeddingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protoembedding.NodeEmbeddingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_node_ids()->MergeFrom(from._internal_node_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeEmbeddingRequest::CopyFrom(const NodeEmbeddingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoembedding.NodeEmbeddingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeEmbeddingRequest::InternalSwap(NodeEmbeddingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_ids_.InternalSwap(&other->_impl_.node_ids_);
}

::google::protobuf::Metadata NodeEmbeddingRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeEmbeddingResponse::_Internal {
 public:
};

NodeEmbeddingResponse::NodeEmbeddingResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protoembedding.NodeEmbeddingResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protoembedding::NodeEmbeddingResponse& from_msg)
      : dimensions_{visibility, arena, from.dimensions_},
        _dimensions_cached_byte_size_{0},
        missing_ids_{visibility, arena, from.missing_ids_},
        _missing_ids_cached_byte_size_{0},
        embeddings_data_(arena, from.embeddings_data_),
        _cached_size_{0} {}

NodeEmbeddingResponse::NodeEmbeddingResponse(
    ::google::protobuf::Arena* arena,
    const NodeEmbeddingResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeEmbeddingResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:protoembedding.NodeEmbeddingResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeEmbeddingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dimensions_{visibility, arena},
        _dimensions_cached_byte_size_{0},
        missing_ids_{visibility, arena},
        _missing_ids_cached_byte_size_{0},
        embeddings_data_(arena),
        _cached_size_{0} {}

inline void NodeEmbeddingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeEmbeddingResponse::~NodeEmbeddingResponse() {
  // @@protoc_insertion_point(destructor:protoembedding.NodeEmbeddingResponse)
  SharedDtor(*this);
}
inline void NodeEmbeddingResponse::SharedDtor(MessageLite& self) {
  NodeEmbeddingResponse& this_ = static_cast<NodeEmbeddingResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.embeddings_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NodeEmbeddingResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeEmbeddingResponse(arena);
}
constexpr auto NodeEmbeddingResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.dimensions_) +
          decltype(NodeEmbeddingResponse::_impl_.dimensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.missing_ids_) +
          decltype(NodeEmbeddingResponse::_impl_.missing_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NodeEmbeddingResponse), alignof(NodeEmbeddingResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NodeEmbeddingResponse::PlacementNew_,
                                 sizeof(NodeEmbeddingResponse),
                                 alignof(NodeEmbeddingResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeEmbeddingResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeEmbeddingResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeEmbeddingResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeEmbeddingResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeEmbeddingResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeEmbeddingResponse>(), &NodeEmbeddingResponse::ByteSizeLong,
            &NodeEmbeddingResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_._cached_size_),
        false,
    },
    &NodeEmbeddingResponse::kDescriptorMethods,
    &descriptor_table_embedding_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeEmbeddingResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> NodeEmbeddingResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protoembedding::NodeEmbeddingResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes embeddings_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.embeddings_data_)}},
    // repeated int32 dimensions = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.dimensions_)}},
    // repeated uint32 missing_ids = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.missing_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes embeddings_data = 1;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.embeddings_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated int32 dimensions = 2;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.dimensions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated uint32 missing_ids = 3;
    {PROTOBUF_FIELD_OFFSET(NodeEmbeddingResponse, _impl_.missing_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NodeEmbeddingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:protoembedding.NodeEmbeddingResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimensions_.Clear();
  _impl_.missing_ids_.Clear();
  _impl_.embeddings_data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeEmbeddingResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeEmbeddingResponse& this_ = static_cast<const NodeEmbeddingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeEmbeddingResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeEmbeddingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protoembedding.NodeEmbeddingResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes embeddings_data = 1;
          if (!this_._internal_embeddings_data().empty()) {
            const std::string& _s = this_._internal_embeddings_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated int32 dimensions = 2;
          {
            int byte_size = this_._impl_._dimensions_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  2, this_._internal_dimensions(), byte_size, target);
            }
          }

          // repeated uint32 missing_ids = 3;
          {
            int byte_size = this_._impl_._missing_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  3, this_._internal_missing_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protoembedding.NodeEmbeddingResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeEmbeddingResponse::ByteSizeLong(const MessageLite& base) {
          const NodeEmbeddingResponse& this_ = static_cast<const NodeEmbeddingResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeEmbeddingResponse::ByteSizeLong() const {
          const NodeEmbeddingResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protoembedding.NodeEmbeddingResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 dimensions = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_dimensions(), 1,
                      this_._impl_._dimensions_cached_byte_size_);
            }
            // repeated uint32 missing_ids = 3;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_missing_ids(), 1,
                      this_._impl_._missing_ids_cached_byte_size_);
            }
          }
           {
            // bytes embeddings_data = 1;
            if (!this_._internal_embeddings_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_embeddings_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeEmbeddingResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeEmbeddingResponse*>(&to_msg);
  auto& from = static_cast<const NodeEmbeddingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protoembedding.NodeEmbeddingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dimensions()->MergeFrom(from._internal_dimensions());
  _this->_internal_mutable_missing_ids()->MergeFrom(from._internal_missing_ids());
  if (!from._internal_embeddings_data().empty()) {
    _this->_internal_set_embeddings_data(from._internal_embeddings_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeEmbeddingResponse::CopyFrom(const NodeEmbeddingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protoembedding.NodeEmbeddingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeEmbeddingResponse::InternalSwap(NodeEmbeddingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dimensions_.InternalSwap(&other->_impl_.dimensions_);
  _impl_.missing_ids_.InternalSwap(&other->_impl_.missing_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.embeddings_data_, &other->_impl_.embeddings_data_, arena);
}

::google::protobuf::Metadata NodeEmbeddingResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protoembedding
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_embedding_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
